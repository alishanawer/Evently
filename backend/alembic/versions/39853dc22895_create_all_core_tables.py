"""Create all core tables

Revision ID: 39853dc22895
Revises: 
Create Date: 2025-10-30 15:57:36.100462

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '39853dc22895'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_user_id'), 'user', ['user_id'], unique=False)
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('venue', sa.String(length=100), nullable=True),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index(op.f('ix_event_event_id'), 'event', ['event_id'], unique=False)
    op.create_table('registration',
    sa.Column('reg_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('reg_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('reg_id')
    )
    op.create_index(op.f('ix_registration_reg_id'), 'registration', ['reg_id'], unique=False)
    op.create_table('ticket',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('reg_id', sa.Integer(), nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['reg_id'], ['registration.reg_id'], ),
    sa.PrimaryKeyConstraint('ticket_id')
    )
    op.create_index(op.f('ix_ticket_ticket_id'), 'ticket', ['ticket_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ticket_ticket_id'), table_name='ticket')
    op.drop_table('ticket')
    op.drop_index(op.f('ix_registration_reg_id'), table_name='registration')
    op.drop_table('registration')
    op.drop_index(op.f('ix_event_event_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_user_user_id'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
